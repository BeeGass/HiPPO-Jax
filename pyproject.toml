[tool.poetry]
name = "s4mer"
version = "0.1.0"
description = "Repo for the testing and developing of state space models, transformers and the hybrid between the two; trained on whole slide digital pathology image data."
authors = ["Bryan Gass <bryank123@live.com>"]
maintainers = ["Bryan Gass <bryank123@live.com>"]
license = "GPL-3.0-or-later"
readme = "README.md"
repository = "https://github.com/Dana-Farber-AIOS/s4mer"
classifiers = [
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Framework :: Sphinx",
    "Framework :: Pytest",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
torch = [
    {version = "^1.12.0", platform = "linux"},
    {platform = "macosx", url = "https://download.pytorch.org/whl/nightly/cpu/torch-1.13.0.dev20220616-cp39-none-macosx_11_0_arm64.whl"}
    ]
torchvision = [
    {version = "^0.13.0", platform = "linux"},
    {platform = "macosx", url = "https://download.pytorch.org/whl/nightly/cpu/torchvision-0.14.0.dev20220616-cp39-cp39-macosx_11_0_arm64.whl"}
    ]
torchaudio = [
    {version = "^0.12.0", platform = "linux"},
    {platform = "macosx", url = "https://download.pytorch.org/whl/nightly/cpu/torchaudio-0.14.0.dev20220603-cp39-cp39-macosx_11_0_arm64.whl"}
    ]
black = {version = "^22.6.0", platform = "linux"}
jax = {version = "^0.3.15", platform = "linux"}
flax = {version = "^0.5.3", platform = "linux"}
optax = {version = "^0.1.3", platform = "linux"}
numpy = {version = "^1.23.1", platform = "linux"}
notebook = {version = "^6.4.12", platform = "linux"}
jupyter = {version = "^1.0.0", platform = "linux"}
ipykernel = {version = "^6.15.1", platform = "linux"}
ipython = {version = "^8.4.0", platform = "linux"}
pre-commit = {version = "^2.20.0", platform = "linux"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
