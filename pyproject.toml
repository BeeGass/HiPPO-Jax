[tool.poetry]
name = "s4mer-pkg"
packages = [
    { include = "src", from="." },
]
version = "1.0.0"
description = "Repo for the testing and developing of state space models, transformers and the hybrid between the two; trained on whole slide digital pathology image data."
authors = ["Bryan Gass <bryank123@live.com>"]
maintainers = [
    "Bryan Gass <bryank123@live.com>",
]
license = "GPL-3.0-or-later"
readme = "README.md"
repository = "https://github.com/Dana-Farber-AIOS/s4mer"
classifiers = [
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Framework :: Sphinx",
    "Framework :: Pytest",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">=3.8.0,<=3.8.13"
jaxtyping = "^0.2.11"

[tool.poetry.group.mltools]
optional = true

[tool.poetry.group.mltools.dependencies]
# ~~~~~ ML dependencies ~~~~~
numpy = [
    {version = "^1.23.1", platform = "linux"},
    {version = "^1.23.1", platform = "darwin"}
    ]
scipy = [
    {version = "^1.9.0", platform = "linux"},
    {version = "^1.9.0", platform = "darwin"}
    ]
einops = [
    {version = "^0.5.0", platform = "linux"},
    {version = "^0.5.0", platform = "darwin"}
    ]
hydra-core = [
    {version = "^1.2.0", platform = "linux"},
    {version = "^1.2.0", platform = "darwin"}
    ]
omegaconf = [
    {version = "^2.2.3", platform = "linux"},
    {version = "^2.2.3", platform = "darwin"}
    ]
wandb = [
    {version = "^0.13.5", platform = "linux"},
    {version = "^0.13.5", platform = "darwin"}
    ]

[tool.poetry.group.dataset]
optional = true

[tool.poetry.group.dataset.dependencies]
# tensorflow = {version = "^2.10.0", platform = "linux"}
# tensorflow-datasets = {version = "^4.7.0", platform = "linux"}


[tool.poetry.group.torch]
optional = true

[tool.poetry.group.torch.dependencies]
# ~~~~~ PyTorch dependencies ~~~~~

torch = [
    {platform = "linux", version = "^1.13.1", source = "pypi"},
    {platform = "darwin", version = "^1.13.1", source = "pypi"}
]
torchvision = [
    {platform = "linux", version = "^0.14.1", source = "pypi"},
    {platform = "darwin", version = "^0.14.1", source = "pypi"}
    ]
#torchaudio = [
#    {platform = "darwin", url = "https://download.pytorch.org/whl/nightly/cpu/torchaudio-0.14.0.dev20220603-cp39-cp39-macosx_11_0_arm64.whl"},
#    ]
functorch = [
    {platform = "linux", version = "^1.13.1"},
    {platform = "darwin", version = "^1.13.1"}
]

[tool.poetry.group.jax]
optional = true

[tool.poetry.group.jax.dependencies]
# ~~~~~ Jax dependencies ~~~~~
jax = [
    {version = "^0.4.3", platform = "darwin", source="pypi"},
    {version = "^0.4.1+cuda11.cudnn86", platform = "linux"}
]

#jaxlib = [
#    {version = "^0.4.1", platform = "darwin", source="pypi"},
#    {version = "^0.4.1+cuda11.cudnn86", platform = "linux"}
#]

flax = [
    {version = "^0.5.3", platform = "linux"},
    {version = "^0.5.2", platform = "darwin"} # issue with flax installing tensorstore that isnt compatible on mac
    ]
optax = [
    {version = "^0.1.3", platform = "linux"},
    {version = "^0.1.3", platform = "darwin"}
    ]

[tool.poetry.group.jupyter]
optional = true

[tool.poetry.group.jupyter.dependencies] 
# ~~~~~ jupyter dependencies ~~~~~
notebook = [
    {version = "^6.4.12", platform = "linux"},
    {version = "^6.4.12", platform = "darwin"}
    ]
jupyter = [
    {version = "^1.0.0", platform = "linux"},
    {version = "^1.0.0", platform = "darwin"}
    ]
ipykernel = [
    {version = "^6.15.1", platform = "linux"},
    {version = "^6.15.1", platform = "darwin"}
    ]
ipython = [
    {version = "^8.4.0", platform = "linux"},
    {version = "^8.4.0", platform = "darwin"}
    ]
requests = [
    {version = "^2.28.1", platform = "linux"}, 
    {version = "^2.28.1", platform = "darwin"}
    ]

[tool.poetry.group.additional]
optional = true

[tool.poetry.group.additional.dependencies]
# ~~~~~ additional dependencies ~~~~~
black = [
    {extras = ["jupyter"], version = "^22.6.0", platform = "linux"},
    {extras = ["jupyter"], version = "^22.6.0", platform = "darwin"}
    ]
pre-commit = [
    {version = "^2.20.0", platform = "linux"},
    {version = "^2.20.0", platform = "darwin"}
    ]
pytest = [
    {version = "^7.1.3", platform = "linux"},
    {version = "^7.1.3", platform = "darwin"},
    ]

#[[tool.poetry.source]]
#name = "pytorch"
#url = "https://download.pytorch.org/whl/nightly/cu118"
#default = false
#secondary = true


[[tool.poetry.source]]
name = "jax"
url = "https://storage.googleapis.com/jax-releases/jax_cuda_releases.html"
default = false
secondary = false

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"